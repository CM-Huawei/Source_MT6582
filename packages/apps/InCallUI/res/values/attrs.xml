<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2013 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License
  -->

<resources>
    <declare-styleable name="EditPhoneNumberPreference">
        <!-- The enable button text. -->
        <attr name="enableButtonText" format="string" />
        <!-- The disable button text. -->
        <attr name="disableButtonText" format="string" />
        <!-- The change / update button text. -->
        <attr name="changeNumButtonText" format="string" />
        <!-- The confirm button mode. -->
        <attr name="confirmMode">
            <!-- Traditional single action "ok" button. -->
            <enum name="confirm" value="0" />
            <!-- Two state "enable/disable" button. -->
            <enum name="activation" value="1" />
        </attr>
    </declare-styleable>

    <declare-styleable name="CallForwardEditPreference">
        <attr name="serviceClass">
            <!-- voice -->
            <enum name="voice" value="1" />
            <!-- data -->
            <enum name="data" value="2" />
        </attr>
        <attr name="reason">
            <!-- unconditional  -->
            <enum name="unconditional" value="0" />
            <!-- busy -->
            <enum name="busy" value="1" />
            <!-- no_reply -->
            <enum name="no_reply" value="2" />
            <!-- not_reachable -->
            <enum name="not_reachable" value="3" />
        </attr>
    </declare-styleable>

    <declare-styleable name="GlowPadView">
        <attr name="android:gravity"/>

        <!-- Reference to an array resource that be shown as targets around a circle. -->
        <attr name="targetDrawables" format="reference"/>

        <!-- Reference to an array resource that be used as description for the targets around the circle. -->
        <attr name="targetDescriptions" format="reference"/>

        <!-- Reference to an array resource that be used to announce the directions with targets around the circle. -->
        <attr name="directionDescriptions" format="reference"/>

        <!-- Sets a drawable as the center. -->
        <attr name="handleDrawable" format="reference"/>

        <!-- Drawable to use for wave ripple animation. -->
        <attr name="outerRingDrawable" format="reference"/>

        <!-- Drawble used for drawing points -->
        <attr name="pointDrawable" format="reference"/>

        <!-- Inner radius of glow area. -->
        <attr name="innerRadius" format="dimension"/>

        <!-- Outer radius of glow area. Target icons will be drawn on this circle. -->
        <attr name="outerRadius" format="dimension"/>

        <!-- Size of target radius. Points within this distance of target center is a "hit". -->
        <!--
        <attr name="hitRadius" format="dimension"/>
        -->

        <!-- Radius of glow under finger. -->
        <attr name="glowRadius" format="dimension"/>

        <!-- Tactile feedback duration for actions. Set to '0' for no vibration. -->
        <attr name="vibrationDuration" format="integer"/>

        <!-- How close we need to be before snapping to a target. -->
        <attr name="snapMargin" format="dimension"/>

        <!-- Number of waves/chevrons to show in animation. -->
        <attr name="feedbackCount" format="integer"/>

        <!-- Used when the handle shouldn't wait to be hit before following the finger -->
        <attr name="alwaysTrackFinger" format="boolean"/>

        <!-- Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. -->
        <attr name="allowScaling" format="boolean" />
    </declare-styleable>
</resources>
